# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Sms.Sender.Client

on:
  push:
    branches: [ 'master' ]
    paths:
      - 'src/Sms.Sender.Client/**'
      - 'src/Sms.Sender.DataContracts/**'
      
env:
  PROJECT_PATH: 'src/Sms.Sender.Client/Sms.Sender.Client.csproj'
  PACKAGE_OUTPUT_DIRECTORY: ${{ github.WORKSPACE }}/output
  PACKAGE_VERSION: 0.0.${{ github.RUN_NUMBER }}
  GITHUB_AUTH_TOKEN: ${{ secrets.AUTH_TOKEN }}
  GITHUB_SOURCE_USERNAME: ${{ github.REPOSITORY_OWNER }}
  GITHUB_SOURCE_URL: 'https://nuget.pkg.github.com/${{ github.REPOSITORY_OWNER }}/index.json'
 
jobs:
  build:
    name: 'Build'
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      
    steps:
    - name: 'Checkout'
      uses: actions/checkout@v3

    - name: 'Install .NET' 
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    
    - name: 'Sources'
      run: dotnet nuget add source --username ${{ env.GITHUB_SOURCE_USERNAME }} --password ${{ env.GITHUB_AUTH_TOKEN }} --store-password-in-clear-text --name github '${{ env.GITHUB_SOURCE_URL }}'
    
    - name: 'Restore'
      run: dotnet restore ${{ env.PROJECT_PATH }}
   
    - name: 'Build'
      run: dotnet build ${{ env.PROJECT_PATH }} --no-restore --configuration Release
    
    - name: 'Pack'
      run: dotnet pack ${{ env.PROJECT_PATH }} --no-restore --no-build --configuration Release -p:PackageVersion='${{ env.PACKAGE_VERSION }}' --output ${{ env.PACKAGE_OUTPUT_DIRECTORY }}

    - name: 'Push'
      run: dotnet nuget push ${{ env.PACKAGE_OUTPUT_DIRECTORY }}/*.nupkg --api-key ${{ env.GITHUB_AUTH_TOKEN }} --source github --skip-duplicate
